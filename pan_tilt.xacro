<?xml version="1.0"?>
<robot name="pan_tilt" xmlns:xacro="http://ros.org/wiki/xacro">

<xacro:property name="base_link_length" value="0.03" />
    <xacro:property name="base_link_radius" value="0.4" />

    <xacro:property name="pan_link_length" value="1.5" />
    <xacro:property name="pan_link_radius" value="0.04" />

    <xacro:property name="tilt_link_length" value="0.2" />
    <xacro:property name="tilt_link_radius" value="0.04" />
	<xacro:property name="PI" value="3.1415926535897931"/>
  <xacro:property name="mass" value="1" /> <!-- arbitrary value for mass -->
  <xacro:property name="width" value="0.1" /> <!-- Square dimensions (widthxwidth) of beams -->
  <xacro:property name="height1" value="2" /> <!-- Link 1 -->
  <xacro:property name="height2" value="1" /> <!-- Link 2 -->
  <xacro:property name="height3" value="1" /> <!-- Link 3 -->
  <xacro:property name="camera_link" value="0.05" /> <!-- Size of square 'camera' box -->
  <xacro:property name="axel_offset" value="0.05" /> <!-- Space btw top of beam and the each joint -->


  <link name="world"/>

    <joint name="world_joint" type="fixed">
        <parent link="world"/>
        <child link="base_link"/>
        <static>0</static>
    </joint> 

    <link name="base_link">
        <visual>
            <geometry>
                <cylinder radius="${base_link_radius}" length="${base_link_length}"/>
            </geometry>
          <origin xyz="0.0 0.0 0.30" rpy="0.0 0.0 0.0"/>
        </visual>

        <collision>
            <geometry>
                <cylinder radius="${base_link_radius}" length="${base_link_length}"/>
            </geometry>
           <origin xyz="0.0 0.0 0.30" rpy="0.0 0.0 0.0"/>
        </collision>

        <inertial>
            <mass value="10.0"/>
            <inertia ixx="0.40075" ixy="0.0" ixz="0.0" iyy="0.40075" iyz="0.0" izz="0.8"/>            
        </inertial>
    </link>

    <joint name="pan_joint" type="revolute">
        <parent link="base_link"/>
        <child link="pan_link"/>
        <origin xyz="0.0 0.0 0.315"/>
        <axis xyz="0.0 0.0 1.0"/>
       <limit lower="-1000000" upper="1000000" effort="300" velocity="0.1"/>
        <dynamics damping="50" friction="1"/>
    </joint>


    <link name="pan_link">
        <visual>
            <geometry>
                <cylinder radius="${pan_link_radius}" length="${pan_link_length}"/>
            </geometry>
        <origin xyz="0.0 0.0 0.75" rpy="0.0 0.0 0.0"/>
        <material name="red">
            <color rgba="0 0 1 1"/>
        </material>
        </visual>

        <collision>
            <geometry>
                <cylinder radius="${pan_link_radius+0.02}" length="${pan_link_length}"/>
            </geometry>    
        <origin xyz="0.0 0.0 0.75" rpy="0.0 0.0 0.0"/>
        </collision>
        <inertial>
            <mass value="5.0"/>
            <inertia ixx="3.75" ixy="0.0" ixz="0.0" iyy="3.75" iyz="0.0" izz="0.04"/>
        </inertial>
    </link>


    <joint name="tilt_joint" type="revolute">
        <parent link="pan_link"/>
        <child link="tilt_link"/>
        <origin xyz="0.0 0.09 1.5"/>
        <axis xyz="0.0 1.0 0.0"/>
       <limit lower="-1000000" upper="1000000" effort="300.0" velocity="0.5"/>
        <dynamics damping="50" friction="1"/>
    </joint>


    <link name="tilt_link">
        <visual>
            <geometry>
                <cylinder radius="${tilt_link_radius}" length="${tilt_link_length}"/>
            </geometry>
            <origin xyz="0.0 0.0 0.1" rpy="0.0 0 0.0"/>
            <material name="green">
                <color rgba="1.0 0.0 0.0 1.0"/>
            </material>
        </visual>
        <collision>
            <geometry>
                <cylinder radius="${tilt_link_radius+0.2}" length="${tilt_link_length}"/>
            </geometry>
            <origin xyz="0.0 0.0 0.1" rpy="0.0 0 0.0"/>
        </collision>

        <inertial>
            <mass value="5.0"/>
            <inertia ixx="0.266" ixy="0.0" ixz="0.0" iyy="0.266" iyz="0.0" izz="0.4"/>    
        </inertial>
    </link>

   <joint name="camera_joint" type="fixed">
    <axis xyz="0 1 0" />
    <origin xyz="${camera_link} 0 ${height3 - axel_offset*2}" rpy="0 0 0"/>
    <parent link="tilt_link"/>
    <child link="camera_link"/>
  </joint>

  <!-- Camera -->
  <link name="camera_link">
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
	<box size="${camera_link} ${camera_link} ${camera_link}"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
	<box size="${camera_link} ${camera_link} ${camera_link}"/>
      </geometry>
      <material name="red"/>
    </visual>

    <inertial>
      <mass value="1e-5" />
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
  </link>

  <!-- generate an optical frame http://www.ros.org/reps/rep-0103.html#suffix-frames
      so that ros and opencv can operate on the camera frame correctly -->
  <joint name="camera_optical_joint" type="fixed">
    <!-- these values have to be these values otherwise the gazebo camera image
        won't be aligned properly with the frame it is supposedly originating from -->
    <origin xyz="0 0 0" rpy="${-pi/2} 0 ${-pi/2}"/>
    <parent link="camera_link"/>
    <child link="camera_link_optical"/>
  </joint>

  <link name="camera_link_optical">
  </link>

  <transmission name="tran1">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="joint1">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor1">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>

  <transmission name="tran2">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="joint2">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor2">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>

   
   
   
   
    <!-- camera_link -->
  <gazebo reference="camera_link">
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
    <material>Gazebo/Red</material>
  </gazebo>
     <!-- camera -->
  <gazebo reference="camera_link">
    <sensor type="camera" name="camera1">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>800</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>rrbot/camera1</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera_link_optical</frameName>
        <!-- setting hackBaseline to anything but 0.0 will cause a misalignment
            between the gazebo sensor image and the frame it is supposed to
            be attached to -->
        <hackBaseline>0.0</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
        <CxPrime>0</CxPrime>
        <Cx>0.0</Cx>
        <Cy>0.0</Cy>
        <focalLength>0.0</focalLength>
      </plugin>
    </sensor>
  </gazebo>
  
     <self_collide>0</self_collide>
      <enable_wind>0</enable_wind>
      <kinematic>0</kinematic>
      <gravity>0</gravity>
      <!--<mu>1</mu>-->
      <mu2>1</mu2>
      <fdir1>0 0 0</fdir1>
      <!--<slip1>0</slip1>
      <slip2>0</slip2>-->
      <kp>1e+13</kp>
      <kd>1</kd>
      <sensor name="cameracolor" type="camera">
        <camera name="camera">
          <horizontal_fov>1.211258501</horizontal_fov>
          <image>
            <width>640</width>
            <height>480</height>
            <format>RGB_INT8</format>
          </image>
          <clip>
            <near>0.1</near>
            <far>100</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.007</stddev>
          </noise>
        </camera>
        <always_on>1</always_on>
        <update_rate>30</update_rate>
        <visualize>1</visualize>
      </sensor>
      <sensor name="cameraired1" type="camera">
        <camera name="camera">
          <horizontal_fov>1.487020523</horizontal_fov>
          <image>
            <width>1280</width>
            <height>720</height>
            <format>L_INT8</format>
          </image>
          <clip>
            <near>0.1</near>
            <far>100</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.05</stddev>
          </noise>
        </camera>
        <always_on>1</always_on>
        <update_rate>90</update_rate>
        <visualize>1</visualize>
      </sensor>
      <sensor name="cameraired2" type="camera">
        <camera name="camera">
          <horizontal_fov>1.487020523</horizontal_fov>
          <image>
            <width>1280</width>
            <height>720</height>
            <format>L_INT8</format>
          </image>
          <clip>
            <near>0.1</near>
            <far>100</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.05</stddev>
          </noise>
        </camera>
        <always_on>1</always_on>
        <update_rate>90</update_rate>
        <visualize>1</visualize>
      </sensor>
      <sensor name="cameradepth" type="depth">
        <camera name="camera">
          <horizontal_fov>1.487020523</horizontal_fov>
          <image>
            <width>640</width>
            <height>480</height>
          </image>
          <clip>
            <near>0.1</near>
            <far>100</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.100</stddev>
          </noise>
        </camera>
        <always_on>1</always_on>
        <update_rate>90</update_rate>
        <visualize>1</visualize>
      </sensor>
    </gazebo>
    <gazebo>
    <plugin name="gazebo_api" filename="libgazebo_ros_api_plugin.so"/>
    <plugin name="my_pantilt2" filename="libmypantilt2_plugin.so"/>
    <plugin name="my_pantilt1" filename="libmypantilt1_plugin.so"/>
    </gazebo>
	
</robot>
